version: '3.8'
services:
  mongo:
    image: mongo:5.0
    restart: always
    container_name: mongo
    volumes:
      - ./volumes/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_ROOT_DATABASE}
    ports:
      - '27017-27019:27017-27019'
    networks:
      - conglomerat-network

  redis:
    image: redis:7.0-rc-alpine
    restart: always
    container_name: redis
    volumes:
      - ./volumes/redis:/data:rw,z
    expose:
      - 6379
    ports:
      - '6379:6379'
    networks:
      - conglomerat-network

  elasticsearch:
    image: elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=${ELK_ROOT_USER}
      - ELASTIC_PASSWORD=${ELK_ROOT_PASSWORD}
      - xpack.security.enabled=true
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - conglomerat-network

  kibana:
    image: kibana:7.16.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL="http://elasticsearch:9200"
      - ELASTICSEARCH_USERNAME=${ELK_ROOT_USER}
      - ELASTICSEARCH_PASSWORD=${ELK_ROOT_PASSWORD}
      - xpack.security.enabled=true
    ports:
      - '5601:5601'
    links:
      - elasticsearch
    networks:
      - conglomerat-network
    depends_on:
      - elasticsearch

  commonwealth:
    build: ./
    image: commonwealth
    container_name: commonwealth
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node','dist/apps/conglomerat/main.js' ]
    ports:
      - '5000:8000'
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  keys:
    build: ./
    image: commonwealth
    container_name: keys
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/keys/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  ladder:
    build: ./
    image: commonwealth
    container_name: ladder
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/ladder/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  discord:
    build: ./
    image: commonwealth
    container_name: discord
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/discord/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oraculum:
    build: ./
    image: commonwealth
    restart: always
    container_name: oraculum
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oraculum/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network


  realms:
    build: ./
    image: commonwealth
    restart: always
    container_name: realms
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/realms/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  characters:
    build: ./
    image: commonwealth
    restart: always
    container_name: characters
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/characters/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network



  osint-1:
    build: ./
    image: commonwealth
    restart: always
    container_name: osint-1
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/osint/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  osint-2:
    build: ./
    image: commonwealth
    restart: always
    container_name: osint-2
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/osint/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  osint-3:
    build: ./
    image: commonwealth
    restart: always
    container_name: osint-3
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/osint/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  osint-4:
    build: ./
    image: commonwealth
    restart: always
    container_name: osint-4
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/osint/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  osint-5:
    build: ./
    image: commonwealth
    restart: always
    container_name: osint-5
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/osint/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-1:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-1
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=Childe
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-2:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-2
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=EdgarHoover
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-3:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-3
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=JohnBoil
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-4:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-4
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=MareAngmar
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-5:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-5
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=YoRu
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-6:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-6
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=BrettHand
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-7:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-7
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ДжонУик
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-8:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-8
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ГрустныйМох
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-9:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-9
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ОгуречныйРассол
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-10:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-10
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=МартиМакФлай
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-11:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-11
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ЛизаМечикова
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-12:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-12
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=Индийскийчай
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network


  oracle-13:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-13
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=TsurumaruKuninaga
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-14:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-14
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ШаловливыйПитон
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-15:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-15
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=РукастыйНуб
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-16:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-16
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ДеревоВЛесу
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-17:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-17
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=Enot
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-18:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-18
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=SashaMaze
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-19:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-19
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=ReaganRidley
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-20:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-20
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=JaceMcKlee
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  dma-1:
    build: ./
    image: commonwealth
    restart: always
    container_name: dma-1
    links:
      - mongo
      - redis
    command: [ 'node', '--max-old-space-size=4096', 'dist/apps/dma/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  dma-2:
    build: ./
    image: commonwealth
    restart: always
    container_name: dma-2
    links:
      - mongo
      - redis
    command: [ 'node', '--max-old-space-size=4096', 'dist/apps/dma/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  dma-3:
    build: ./
    image: commonwealth
    restart: always
    container_name: dma-3
    links:
      - mongo
      - redis
    command: [ 'node', '--max-old-space-size=4096', 'dist/apps/dma/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  guilds:
    build: ./
    image: commonwealth
    restart: always
    container_name: guilds
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/guilds/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  auctions:
    build: ./
    image: commonwealth
    restart: always
    container_name: auctions
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/auctions/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  contracts:
    build: ./
    image: commonwealth
    restart: always
    container_name: contracts
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/contracts/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  valuations:
    build: ./
    image: commonwealth
    restart: always
    container_name: valuations
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/valuations/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  gold:
    build: ./
    image: commonwealth
    restart: always
    container_name: golds
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/gold/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  wowprogress:
    build: ./
    image: commonwealth
    restart: always
    container_name: wowprogress
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/wowprogress/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  warcraftlogs:
    build: ./
    image: commonwealth
    restart: always
    container_name: warcraftlogs
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/warcraftlogs/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  items:
    build: ./
    image: commonwealth
    restart: always
    container_name: items
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/items/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  pricing:
    build: ./
    image: commonwealth
    restart: always
    container_name: pricing
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/pricing/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  wowtoken:
    build: ./
    image: commonwealth
    restart: always
    container_name: wowtoken
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/wowtoken/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

# Docker Networks
networks:
  # All container connect in a network
  conglomerat-network:
    driver: bridge

