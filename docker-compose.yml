version: '3.8'
services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    volumes:
      - ./volumes/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_ROOT_DATABASE}
    ports:
      - '27017-27019:27017-27019'
    networks:
      - conglomerat-network

  redis:
    image: redis:6-alpine
    restart: always
    container_name: redis
    volumes:
      - ./volumes/redis:/data:rw,z
    expose:
      - 6379
    ports:
      - '6379:6379'
    networks:
      - conglomerat-network

  commonwealth:
    build: ./
    image: conglomerat
    container_name: commonwealth
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/conglomerat/main.js' ]
    ports:
      - '5000:8000'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  keys:
    build: ./
    image: conglomerat
    container_name: keys
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/keys/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  realms:
    build: ./
    image: conglomerat
    restart: always
    container_name: realms
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/realms/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  characters:
    build: ./
    image: conglomerat
    restart: always
    container_name: characters
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/characters/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  auctions:
    build: ./
    image: conglomerat
    restart: always
    container_name: auctions
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/auctions/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  wowprogress:
    build: ./
    image: conglomerat
    restart: always
    container_name: wowprogress
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/wowprogress/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network


# Docker Networks
networks:
  # All container connect in a network
  conglomerat-network:
    driver: bridge

