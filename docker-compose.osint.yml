version: '3.8'
services:
  osint:
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    command: [ 'node', 'dist/apps/osint/main.js' ]
    deploy:
      replicas: 5
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  keys:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    container_name: keys
    restart: always
    command: [ 'node', 'dist/apps/keys/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  ladder:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    container_name: ladder
    restart: always
    command: [ 'node', 'dist/apps/ladder/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  realms:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    container_name: realms
    command: [ 'node', 'dist/apps/realms/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  characters:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    container_name: characters
    command: [ 'node', 'dist/apps/characters/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  guilds:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    container_name: guilds
    command: [ 'node', 'dist/apps/guilds/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  wowprogress:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    container_name: wowprogress
    command: [ 'node', 'dist/apps/wowprogress/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

  warcraftlogs:
    build: ./
    image: ghcr.io/alexzedim/commonwealth:latest
    restart: always
    container_name: warcraftlogs
    command: [ 'node', 'dist/apps/warcraftlogs/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    networks:
      - cmnw-network

# Docker Networks
networks:
  # All container connect in a network
  cmnw-network:
    driver: bridge
