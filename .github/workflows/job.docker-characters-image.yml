name: Create Characters Development Image

on:
  push:
    branches: [ develop ]
    paths:
      - 'apps/characters/**'
      - 'libs/**'
      - 'package.json'

jobs:
  publish:
    name: publish
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.15'

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: |
            ghcr.io/alexzedim/characters
          tags: |
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.package-version.outputs.current-version}}
          labels: |
            maintainer = "alexzedim"
            org.opencontainers.image.title = "Characters"
            org.opencontainers.image.vendor = "cmnw"
            org.opencontainers.image.url = "https://raw.githubusercontent.com/alexzedim/cmnw-next/master/public/static/cmnw.png"
            org.opencontainers.image.source = "https://github.com/alexzedim/cmnw"
            org.opencontainers.image.licenses = "MPL 2.0"
            org.opencontainers.image.description = "CMNW"

      - name: Login to Github Packages
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build & Push (GHCR)
        id: build-push-action
        uses: docker/build-push-action@v4.1.1
        with:
          file: ./apps/characters/Dockerfile
          push: true
          tags: ghcr.io/alexzedim/characters:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CR_PAT=${{ secrets.CR_PAT }}

      - name: Image digest
        run: |
          echo ${{ steps.meta.outputs.tags }}
          echo ${{ steps.build-push-action.outputs.digest }}
          echo "Got tag name ${{ steps.package-version.outputs.current-version}}"
