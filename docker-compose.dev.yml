version: '3.8'
services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    volumes:
      - ./volumes/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_ROOT_DATABASE}
    ports:
      - '27017-27019:27017-27019'
    networks:
      - conglomerat-network

  elasticsearch:
    image: elasticsearch:7.16.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_USERNAME=${ELK_ROOT_USER}
      - ELASTIC_PASSWORD=${ELK_ROOT_PASSWORD}
      - xpack.security.enabled=true
    volumes:
      - ./volumes/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - conglomerat-network

  kibana:
    image: kibana:7.16.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL="http://elasticsearch:9200"
      - ELASTICSEARCH_USERNAME=${ELK_ROOT_USER}
      - ELASTICSEARCH_PASSWORD=${ELK_ROOT_PASSWORD}
      - xpack.security.enabled=true
    ports:
      - '5601:5601'
    links:
      - elasticsearch
    networks:
      - conglomerat-network
    depends_on:
      - elasticsearch

  redis:
    image: redis:6-alpine
    restart: always
    container_name: redis
    volumes:
      - ./volumes/redis:/data:rw,z
    expose:
      - 6379
    ports:
      - '6379:6379'
    networks:
      - conglomerat-network

  keys:
    build: ./
    image: commonwealth
    container_name: keys
    restart: always
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/keys/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-1:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-1
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=juggernaut
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-2:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-2
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=BethAnemos
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

  oracle-3:
    build: ./
    image: commonwealth
    restart: always
    container_name: oracle-3
    links:
      - mongo
      - redis
    command: [ 'node', 'dist/apps/oracle/main.js' ]
    environment:
      - NODE_ENV=${NODE_ENV}
      - ACCOUNT=trinity
    depends_on:
      - mongo
      - redis
    networks:
      - conglomerat-network

# Docker Networks
networks:
  # All container connect in a network
  conglomerat-network:
    driver: bridge

