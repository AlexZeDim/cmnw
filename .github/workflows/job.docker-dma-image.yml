name: Build DMA Image

on:
  push:
    branches: [ master ]
    paths:
      - 'apps/auctions/**'
      - 'apps/items/**'
      - 'apps/gold/**'
      - 'apps/wowtoken/**'
      - 'apps/dma/**'
      - 'libs/**'
      - 'docker/arm64.dma.Dockerfile'
      - 'docker/x64.dma.Dockerfile'
      - 'package.json'

jobs:
  publish:
    name: publish
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Generate tags
        id: release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          tag_prefix: v

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '22.15'

      - name: Setup yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: |
            ghcr.io/alexzedim/dma
          tags: |
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
          labels: |
            maintainer=alexzedim
            org.opencontainers.image.title=DMA
            org.opencontainers.image.licenses=MPL-2.0
            org.opencontainers.image.vendor=cmnw
            org.opencontainers.image.url=https://raw.githubusercontent.com/alexzedim/cmnw-next/master/public/static/cmnw.png
            org.opencontainers.image.source=https://github.com/alexzedim/cmnw
            org.opencontainers.image.description=Intelligence-always-wins

      - name: Login to Github Packages
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build & Push (GHCR)
        uses: docker/build-push-action@v4.1.1
        with:
          file: ./docker/x64.dma.Dockerfile
          push: true
          tags: ghcr.io/alexzedim/dma:latest
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            CR_PAT=${{ secrets.CR_PAT }}

      - name: Image digest
        run: echo ${{ steps.build-push-action.outputs.digest }}
